<?xml version="1.0" encoding="UTF-8"?>
<project name="zm-selenium" default="jar" basedir=".">

    <import file="../zm-zcs/ant-global.xml"/>
	<property name="build.version" value="6.0.0"/>
	<property name="build.resources.dir" location="${build.dir}/resources"/>
	<property name="generated.dir" location="${build.dir}/generated"/>
	<property name="generated.java.dir" location="${generated.dir}/java"/>
	<property name="generated.javadocs.dir" location="${generated.dir}/javadocs"/>
	<property name="dist.dir" location="${build.dir}/dist/zimbra-${build.version}"/>
	<property name="conf.dir" location="conf"/>

	<property name="tms.dir" location="${build.dir}/tms"/>
	<property name="tms.tgz.file" value="selng.tgz"/>
	<property name="tms.tgz.filepath" location="${dist.dir}/${tms.tgz.file}"/>

	<property name="server-conf.dir" location="../zm-store-conf"/>
	<property name="webclient.dir" location="../zm-web-client"/>
	<property name="zimlet.dir" location="../zm-zimlets"/>

	<path id="all.java.path">
		<pathelement location="${src.java.dir}"/>
		<pathelement location="${generated.java.dir}"/>
	</path>

	<target name="clean" description="Removes all built files">
		<delete dir="${build.dir}"/>
	</target>

	<target name="build-init" description="Create folders as required">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${dist.lib.dir}"/>
		<mkdir dir="${generated.java.dir}"/>
		<mkdir dir="${generated.javadocs.dir}"/>
		<mkdir dir="${build.classes.dir}"/>
	</target>

	<target name="compile" depends="build-init,bundles-jar,coverage-jar,resolve" description="Compiles the source code">
		<echo message="Compiling framework..."/>
		<javac destdir="${build.classes.dir}" debug="true" classpathref="class.path" nowarn="on" encoding="iso-8859-1">
			<src refid="all.java.path"/>
		</javac>
	</target>

	<target name="jar" depends="compile" description="Creates the jar file">
		<jar destfile="${dist.lib.dir}/zimbraselenium.jar" basedir="${build.classes.dir}"/>
	</target>

	<target name="javadocs" description="Build javadocs">
		<javadoc destdir="${generated.javadocs.dir}" classpathref="class.path" access="public" useexternalfile="yes">
			<link offline="true" href="http://java.sun.com/j2se/1.5.0/docs/api package-list" packagelistLoc="."/>
			<fileset dir="${src.java.dir}/com/zimbra/qa/selenium/framework" includes="**/*.java"/>
			<fileset dir="${src.java.dir}/com/zimbra/qa/selenium/projects/ajax/core" includes="**/*.java"/>
			<fileset dir="${src.java.dir}/com/zimbra/qa/selenium/projects/ajax/ui" includes="**/*.java"/>
			<fileset dir="${src.java.dir}/com/zimbra/qa/selenium/projects/admin/core" includes="**/*.java"/>
			<fileset dir="${src.java.dir}/com/zimbra/qa/selenium/projects/admin/ui" includes="**/*.java"/>
		</javadoc>
	</target>

	<target name="bundles-classes" description="Copies the I18N properties files to build">
		<copy todir="${build.resources.dir}">
			<fileset dir="${webclient.dir}/WebRoot/messages/"/>
		</copy>
		<copy todir="${build.resources.dir}">
			<fileset dir="${server-conf.dir}/conf/msgs/"/>
		</copy>
		<copy todir="${build.resources.dir}">
			<fileset dir="${zimlet.dir}/src/zimlet/com_zimbra_attachcontacts/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlet.dir}/src/zimlet/com_zimbra_attachmail/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlet.dir}/src/zimlet/com_zimbra_date/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlet.dir}/src/zimlet/com_zimbra_dnd/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlet.dir}/src/zimlet/com_zimbra_email/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlet.dir}/src/zimlet/com_zimbra_linkedin/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlet.dir}/src/zimlet/com_zimbra_linkedinimage/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlet.dir}/src/zimlet/com_zimbra_phone/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlet.dir}/src/zimlet/com_zimbra_social/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlet.dir}/src/zimlet/com_zimbra_srchhighlighter/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlet.dir}/src/zimlet/com_zimbra_url/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlet.dir}/src/zimlet/com_zimbra_webex/">
				<filename name="*.properties"/>
			</fileset>
		</copy>
	</target>

	<target name="bundles-jar" depends="bundles-classes" description="Creates a jar with all resource bundles">
		<jar destfile="${dist.lib.dir}/resources.jar" basedir="${build.resources.dir}"/>
	</target>

	<target name="coverage-classes" description="Copies the coverage website files to build">
		<copy todir="${build.coverage.dir}">
			<fileset dir="${src.java.dir}/com/zimbra/qa/selenium/framework/util/coverage"/>
		</copy>
	</target>

	<target name="coverage-jar" depends="coverage-classes" description="Creates a jar with all coverage website files">
		<jar destfile="${dist.lib.dir}/coverage.jar" basedir="${build.coverage.dir}"/>
	</target>

	<target name="jar-staf-selenium" depends="jar, coverage-jar" description="Creates the STAF jar file for the selenium service">
		<property name="build.staf.selenium" location="${build.dir}/staf/selenium"/>
		<property name="build.staf.selenium.jars.dir" location="${build.staf.selenium}/STAF-INF/jars"/>
		<property name="build.staf.selenium.classes.dir" location="${build.staf.selenium}/STAF-INF/classes"/>

		<copy todir="${build.staf.selenium.classes.dir}">
			<fileset dir="${build.classes.dir}"/>
		</copy>

		<copy todir="${build.staf.selenium.jars.dir}">
			
			<fileset dir="${build.deps.dir}">
				<include name="zm-native-8.8.0.jar"/>
				<include name="zm-common-8.8.0.jar"/>
			</fileset>
			
			<fileset dir="${build.deps.dir}">
				<include name="selenium-server-standalone-3.0.0-beta4.jar"/>
				<include name="client-combined-3.0.0-beta4-nodeps.jar"/>
			</fileset>
			
			<fileset dir="${build.deps.dir}">
				<include name="ant-tar-patched.jar"/>
				<include name="apache-log4j-extras-1.0.jar"/>
				<include name="commons-beanutils-1.7.jar"/>
				<include name="commons-cli-1.2.jar"/>
				<include name="commons-codec-1.7.jar"/>
				<include name="commons-collections-3.2.2.jar"/>
				<include name="commons-configuration-1.5.jar"/>
				<include name="commons-httpclient-3.1.jar"/>
				<include name="commons-io-2.5.jar"/>
				<include name="commons-lang-2.6.jar"/>
				<include name="commons-logging.jar"/>
				<include name="dom4j-1.5.2.jar"/>
				<include name="ezmorph-1.0.6.jar"/>
				<include name="guava-13.0.1.jar"/>
				<include name="htmlcleaner-2.2.jar"/>
				<include name="javamail-1.4.5.jar"/>
				<include name="jaxen-1.1-beta-6.jar"/>
				<include name="jsch-0.1.53.jar"/>
				<include name="json-lib-2.3-jdk15.jar"/>
				<include name="json.jar"/>
				<include name="JSTAF.jar"/>
				<include name="ldtp-1.0.jar"/>
				<include name="libidn-1.24.jar"/>
				<include name="log4j-1.2.16.jar"/>
				<include name="mariadb-java-client-1.1.8.jar"/>
				<include name="ocutil-2.4.2.jar"/>
				<include name="testng-5.12.1.jar"/>
				<include name="ws-commons-util-1.0.2.jar"/>
				<include name="xalan.jar"/>
				<include name="xml-apis.jar"/>
				<include name="xmlrpc-client-3.1.3.jar"/>
				<include name="xmlrpc-common-3.1.3.jar"/>
			</fileset>
			
			<fileset dir="${dist.lib.dir}">
				<include name="resources.jar"/>
			</fileset>
			
			<fileset dir="${dist.lib.dir}">
				<include name="coverage.jar"/>
			</fileset>
		</copy>

		<jar destfile="${dist.lib.dir}/zimbrastaf.jar" basedir="${build.staf.selenium}">
			<manifest>
				<attribute name="Main-Class" value="staf.Driver"/>
				<section name="staf/service/info">
					<attribute name="Service-Class" value="com.zimbra.qa.selenium.staf.StafIntegration"/>
					<attribute name="Packaged-Jars" value="ant-tar-patched  apache-log4j-extras-1.0 client-combined-3.0.0-beta4-nodeps commons-beanutils-1.7 commons-cli-1.2 commons-codec-1.7 commons-collections-3.2.2 commons-configuration-1.5 commons-httpclient-3.1 commons-io-2.5 commons-lang-2.6 commons-logging coverage dom4j-1.5.2 ezmorph-1.0.6 guava-13.0.1 htmlcleaner-2.2 javamail-1.4.5 jaxen-1.1-beta-6 jsch-0.1.53 json json-lib-2.3-jdk15 JSTAF ldtp-1.0 libidn-1.24 log4j-1.2.16 mariadb-java-client-1.1.8 ocutil-2.4.2 resources selenium-server-standalone-3.0.0-beta4 testng-5.12.1 ws-commons-util-1.0.2 xalan xml-apis xmlrpc-client-3.1.3 xmlrpc-common-3.1.3 zm-native-8.8.0 zm-common-8.8.0"/>
				</section>
			</manifest>
		</jar>
	</target>

	<target name="jar-staf" depends="jar-staf-selenium" description="Creates all the STAF jar files"> </target>
	<target name="build-selng" depends="tgz-file" description="Creates the tms Package"> </target>

	<path id="dlist.lib.classpath">
		<fileset dir="${dist.lib.dir}">
	        <include name="*.jar"/>
		</fileset>
	</path>
	<target name="Run-ExecuteHarnessMain" depends="jar" description="Run all tests per specified arguments">
		<property name="jarfile" value="${dist.lib.dir}/zimbraselenium.jar"/>
		<property name="pattern" value="ajax.tests"/>
		<property name="groups" value="always,sanity"/>
		<property name="exclude_groups" value="skip"/>
		<echo>Executing tests...</echo>
		<java classname="com.zimbra.qa.selenium.framework.core.ExecuteHarnessMain" classpathref="class.path" fork="true" failonerror="true">
		    <classpath refid="dlist.lib.classpath"/>
			<arg line="-j '${jarfile}' -p ${pattern} -g ${groups} -eg ${exclude_groups} -l conf/log4j.properties  "/>
		</java>
	</target>

	<target name="Sum-ExecuteHarnessMain" depends="jar" description="Count all tests to be run per specified arguments">
		<property name="jarfile" value="${dist.lib.dir}/zimbraselenium.jar"/>
		<property name="pattern" value="ajax.tests"/>
		<property name="groups" value="always,sanity"/>
		<echo>Calculating number of tests for selected groups...</echo>
		<java classname="com.zimbra.qa.selenium.framework.core.ExecuteHarnessMain" classpathref="class.path" fork="true" failonerror="true">
			<arg line="-s -j '${jarfile}' -p ${pattern} -g ${groups} -l conf/log4j.properties "/>
		</java>
	</target>

	<target name="tgz-contents" depends="jar,jar-staf" description="Creates the tms package contents folder">
		<echo message="Creating tms tgz contents..."/>
		<copy file="${dist.lib.dir}/zimbraselenium.jar" todir="${tms.dir}/jars/"/>
		<copy file="${dist.lib.dir}/zimbrastaf.jar" todir="${tms.dir}/jars/"/>
		<copy todir="${tms.dir}/conf/">
			<fileset dir="conf">
				<include name="**/*"/>
			</fileset>
		</copy>
		<copy todir="${tms.dir}/data/">
			<fileset dir="data">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>

	<target name="tgz-file" depends="tgz-contents" description="Creates the tms package tgz file">
		<echo message="Creating tms package tgz file..."/>
		<tar destfile="${tms.tgz.filepath}" compression="gzip">
			<tarfileset dir="${tms.dir}" prefix="SelNG" mode="777">
				<include name="**/*"/>
			</tarfileset>
		</tar>
		<checksum file="${tms.tgz.filepath}" forceOverwrite="yes"/>
	</target>

	<target name="tgz-extract" depends="tgz-file" description="Extracts tms package tgz file">
	    <untar src="${tms.tgz.filepath}" dest="${dist.dir}" compression="gzip"/>
	</target>

</project>
