<project xmlns:ivy="antlib:org.apache.ivy.ant" name="zm-selenium" default="jar" basedir=".">

    <import file="../zm-zcs/ant-global.xml"/>
	<property name="build.version" value="8.8.0"/>
	<property name="build.resources.dir" location="${build.dir}/resources"/>
	<property name="generated.dir" location="${build.dir}/generated"/>
	<property name="generated.java.dir" location="${generated.dir}/java"/>
	<property name="generated.javadocs.dir" location="${generated.dir}/javadocs"/>
	<property name="dist.dir" location="${build.dir}/dist/zimbra-${build.version}"/>
	<property name="conf.dir" location="conf"/>

	<property name="tms.dir" location="${build.dir}/tms"/>
	<property name="tms.tgz.file" value="selng.tgz"/>
	<property name="tms.tgz.filepath" location="${dist.dir}/${tms.tgz.file}"/>

	<property name="network-selenium.dir" location="../zm-network-selenium"/>
	<property name="store-conf.dir" location="../zm-mailbox/store-conf"/>
	<property name="web-client.dir" location="../zm-web-client"/>
	<property name="zimlets.dir" location="../zm-zimlets"/>

	<path id="all.java.path">
		<pathelement location="${src.java.dir}"/>
		<pathelement location="${generated.java.dir}"/>
	</path>

	<target name="clean" description="Removes all built files">
		<delete dir="${build.dir}"/>
	</target>

	<target name="build-init" description="Create folders as required">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${dist.lib.dir}"/>
		<mkdir dir="${generated.java.dir}"/>
		<mkdir dir="${generated.javadocs.dir}"/>
		<mkdir dir="${build.classes.dir}"/>
	</target>

	<target name="compile" depends="build-init,network,bundles-jar,coverage-jar,resolve" description="Compiles the source code">
		<echo message="Compiling framework..."/>
		<javac destdir="${build.classes.dir}" debug="true" classpathref="class.path" nowarn="on" encoding="iso-8859-1">
			<src refid="all.java.path"/>
		</javac>
	</target>

	<target name="jar" depends="compile" description="Creates the jar file">
		<jar destfile="${dist.lib.dir}/zimbraselenium.jar" basedir="${build.classes.dir}"/>
	</target>

	<target name="javadocs" description="Build javadocs">
		<javadoc destdir="${generated.javadocs.dir}" classpathref="class.path" access="public" useexternalfile="yes">
			<link offline="true" href="http://java.sun.com/j2se/1.5.0/docs/api package-list" packagelistLoc="."/>
			<fileset dir="${src.java.dir}/com/zimbra/qa/selenium/framework" includes="**/*.java"/>
			<fileset dir="${src.java.dir}/com/zimbra/qa/selenium/projects/ajax/core" includes="**/*.java"/>
			<fileset dir="${src.java.dir}/com/zimbra/qa/selenium/projects/ajax/ui" includes="**/*.java"/>
			<fileset dir="${src.java.dir}/com/zimbra/qa/selenium/projects/admin/core" includes="**/*.java"/>
			<fileset dir="${src.java.dir}/com/zimbra/qa/selenium/projects/admin/ui" includes="**/*.java"/>
		</javadoc>
	</target>

	<target name="bundles-classes" description="Copies the I18N properties files to build">
		<copy todir="${build.resources.dir}">
			<fileset dir="${web-client.dir}/WebRoot/messages/"/>
		</copy>
		<copy todir="${build.resources.dir}">
			<fileset dir="${store-conf.dir}/conf/msgs/"/>
		</copy>
		<copy todir="${build.resources.dir}">
			<fileset dir="${zimlets.dir}/src/zimlet/com_zimbra_attachcontacts/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlets.dir}/src/zimlet/com_zimbra_attachmail/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlets.dir}/src/zimlet/com_zimbra_date/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlets.dir}/src/zimlet/com_zimbra_dnd/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlets.dir}/src/zimlet/com_zimbra_email/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlets.dir}/src/zimlet/com_zimbra_linkedin/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlets.dir}/src/zimlet/com_zimbra_linkedinimage/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlets.dir}/src/zimlet/com_zimbra_phone/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlets.dir}/src/zimlet/com_zimbra_social/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlets.dir}/src/zimlet/com_zimbra_srchhighlighter/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlets.dir}/src/zimlet/com_zimbra_url/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zimlets.dir}/src/zimlet/com_zimbra_webex/">
				<filename name="*.properties"/>
			</fileset>
		</copy>
	</target>

	<target name="bundles-jar" depends="bundles-classes" description="Creates a jar with all resource bundles">
		<jar destfile="${dist.lib.dir}/resources.jar" basedir="${build.resources.dir}"/>
	</target>

	<target name="coverage-classes" description="Copies the coverage website files to build">
		<copy todir="${build.coverage.dir}">
			<fileset dir="${src.java.dir}/com/zimbra/qa/selenium/framework/util/coverage"/>
		</copy>
	</target>

	<target name="coverage-jar" depends="coverage-classes" description="Creates a jar with all coverage website files">
		<jar destfile="${dist.lib.dir}/coverage.jar" basedir="${build.coverage.dir}"/>
	</target>

	<target name="jar-staf-selenium" depends="jar, coverage-jar" description="Creates the STAF jar file for the selenium service">
		<property name="build.staf.selenium" location="${build.dir}/staf/selenium"/>
		<property name="build.staf.selenium.jars.dir" location="${build.staf.selenium}/STAF-INF/jars"/>
		<property name="build.staf.selenium.classes.dir" location="${build.staf.selenium}/STAF-INF/classes"/>

		<copy todir="${build.staf.selenium.classes.dir}">
			<fileset dir="${build.classes.dir}"/>
		</copy>

		<ivy:install organisation="ant-contrib" module="ant-contrib" revision="1.0b3" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="ant-tar-patched" module="ant-tar-patched" revision="1.0" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="log4j" module="apache-log4j-extras" revision="1.0" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-beanutils" module="commons-beanutils" revision="1.7.0" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="commons-cli" module="commons-cli" revision="1.2" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="commons-codec" module="commons-codec" revision="1.7" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-collections" module="commons-collections" revision="3.2.2" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-configuration" module="commons-configuration" revision="1.10" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="commons-httpclient" module="commons-httpclient" revision="3.1" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-io" module="commons-io" revision="2.5" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="commons-lang" module="commons-lang" revision="2.6" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="commons-logging" module="commons-logging" revision="1.0.3" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="dom4j" module="dom4j" revision="1.5.2" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="net.sf.ezmorph" module="ezmorph" revision="1.0.6" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="com.google.guava" module="guava" revision="21.0" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="net.sourceforge.htmlcleaner" module="htmlcleaner" revision="2.2" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="javax.mail" module="mail" revision="1.4.5" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="jaxen" module="jaxen" revision="1.1-beta-6" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="com.jcraft" module="jsch" revision="0.1.53" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="net.sf.json-lib" module="json-lib" revision="2.4" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="org.json" module="json" revision="20160810" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="net.sf.staf" module="jstaf" revision="3.4.4" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="libidn" module="libidn" revision="1.24" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="log4j" module="log4j" revision="1.2.16" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="org.mariadb.jdbc" module="mariadb-java-client" revision="1.1.8" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="org.clapper" module="javautil" revision="3.2.0" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="xalan" module="serializer" revision="2.7.2" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="org.testng" module="testng" revision="5.12.1" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="org.apache.ws.commons.util" module="ws-commons-util" revision="1.0.2" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="xml-apis" module="xml-apis" revision="2.0.2" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="org.apache.xmlrpc" module="xmlrpc-client" revision="3.1.3" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="org.apache.xmlrpc" module="xmlrpc-common" revision="3.1.3" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
        <ivy:install organisation="selenium-server-standalone" module="selenium-server-standalone" revision="3.4.0" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="client-combined" module="client-combined" revision="3.4.0-nodeps" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="zimbra" module="zm-common" revision="latest.integration" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="zimbra" module="zm-native" revision="latest.integration" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>

		<copy todir="${build.staf.selenium.jars.dir}">
            <fileset dir="${build.tmp.dir}">
                <include name="*.jar"/>
            </fileset>

			<fileset dir="${dist.lib.dir}">
				<include name="resources.jar"/>
			</fileset>

			<fileset dir="${dist.lib.dir}">
				<include name="coverage.jar"/>
			</fileset>
		</copy>

		<fileset dir="${build.tmp.dir}" id="ivy.jar.files">
			<include name="**/*.jar"/>
		</fileset>

	    <pathconvert pathsep=" " property="ivyJarFiles" refid="ivy.jar.files">
			<map from="${build.tmp.dir}\" to=""/>
			<mapper>
				<chainedmapper>
					<flattenmapper/>
					<globmapper from="*.jar" to="*"/>
				</chainedmapper>
			</mapper>
	    </pathconvert>

		<jar destfile="${dist.lib.dir}/zimbrastaf.jar" basedir="${build.staf.selenium}">
			<manifest>
				<attribute name="Main-Class" value="staf.Driver"/>
				<section name="staf/service/info">
					<attribute name="Service-Class" value="com.zimbra.qa.selenium.staf.StafIntegration"/>
					<attribute name="Packaged-Jars" value="${ivyJarFiles} resources coverage"/>
				</section>
			</manifest>
		</jar>

        <!-- Delete tmp folder that may have been left over, e.g.: older versions of same libs -->
        <delete dir="${build.tmp.dir}"/>

	</target>

	<target name="jar-staf" depends="jar-staf-selenium" description="Creates all the STAF jar files"> </target>
	<target name="build-selng" depends="tgz-file" description="Creates the tms Package"> </target>

	<path id="dlist.lib.classpath">
		<fileset dir="${dist.lib.dir}">
	        <include name="*.jar"/>
		</fileset>
	</path>

	<target name="network" description="Specific to network related data and testcases">
		<if> <available file="${network-selenium.dir}" type="dir"/>
			<then>
				<copy todir="src">
					<fileset dir="${network-selenium.dir}/src/"/>
				</copy>
				<copy todir="data">
					<fileset dir="${network-selenium.dir}/data/"/>
				</copy>
			</then>
		</if>
	</target>

	<target name="Run-ExecuteHarnessMain" depends="jar" description="Run all tests per specified arguments">
		<property name="jarfile" value="${dist.lib.dir}/zimbraselenium.jar"/>
		<property name="pattern" value="ajax.tests"/>
		<property name="groups" value="always,sanity"/>
		<property name="exclude_groups" value="skip"/>
		<echo>Executing tests...</echo>
		<java classname="com.zimbra.qa.selenium.framework.core.ExecuteHarnessMain" classpathref="class.path" fork="true" failonerror="true">
		    <classpath refid="dlist.lib.classpath"/>
			<arg line="-j '${jarfile}' -p ${pattern} -g ${groups} -eg ${exclude_groups} -l conf/log4j.properties  "/>
		</java>
	</target>

	<target name="Sum-ExecuteHarnessMain" depends="jar" description="Count all tests to be run per specified arguments">
		<property name="jarfile" value="${dist.lib.dir}/zimbraselenium.jar"/>
		<property name="pattern" value="ajax.tests"/>
		<property name="groups" value="always,sanity"/>
		<echo>Calculating number of tests for selected groups...</echo>
		<java classname="com.zimbra.qa.selenium.framework.core.ExecuteHarnessMain" classpathref="class.path" fork="true" failonerror="true">
			<arg line="-s -j '${jarfile}' -p ${pattern} -g ${groups} -l conf/log4j.properties "/>
		</java>
	</target>

	<target name="tgz-contents" depends="jar,jar-staf" description="Creates the tms package contents folder">
		<echo message="Creating tms tgz contents..."/>
		<copy file="${dist.lib.dir}/zimbraselenium.jar" todir="${tms.dir}/jars/"/>
		<copy file="${dist.lib.dir}/zimbrastaf.jar" todir="${tms.dir}/jars/"/>
		<copy todir="${tms.dir}/conf/">
			<fileset dir="conf">
				<include name="**/*"/>
			</fileset>
		</copy>
		<copy todir="${tms.dir}/data/">
			<fileset dir="data">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>

	<target name="tgz-file" depends="tgz-contents" description="Creates the tms package tgz file">
		<echo message="Creating tms package tgz file..."/>
		<tar destfile="${tms.tgz.filepath}" compression="gzip">
			<tarfileset dir="${tms.dir}" prefix="SelNG" mode="777">
				<include name="**/*"/>
			</tarfileset>
		</tar>
		<checksum file="${tms.tgz.filepath}" forceOverwrite="yes"/>
	</target>

	<target name="tgz-extract" depends="tgz-file" description="Extracts tms package tgz file">
	    <untar src="${tms.tgz.filepath}" dest="${dist.dir}" compression="gzip"/>
	</target>

</project>