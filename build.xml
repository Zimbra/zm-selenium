<project xmlns:ivy="antlib:org.apache.ivy.ant" name="zm-selenium" default="selenium-jar" basedir=".">

	<property name="selenium.version" value="3.11.0"/>

	<property name="ivy.jar.dir" location="${user.home}/.ant/lib"/>
	<property name="ivy.install.version" value="2.3.0"/>
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy-${ivy.install.version}.jar"/>
	<property name="ivy.status" value="integration"/>
	<property name="ivy.organisation" value="synacor"/>
	<property name="ivy.module" value="zm-selenium"/>

	<property name="src.java.dir" location="src/java"/>
	<property name="build.dir" location="build"/>
	<property name="build.tmp.dir" location="${build.dir}/tmp"/>
	<property name="build.dist.dir" location="${build.dir}/dist"/>
	<property name="build.dist.lib.dir" location="${build.dist.dir}/lib"/>
	<property name="build.classes.dir" location="${build.dir}/classes"/>
	<property name="build.deps.dir" location="${user.home}/.zcs-deps"/>
	<property name="build.resources.dir" location="${build.dir}/resources"/>
	<property name="build.coverage.dir" location="${build.dir}/coverage"/>

	<property name="selenium-jar.file" value="ZimbraSelenium.jar"/>
	<property name="selenium-staf-package.name" value="ZimbraSeleniumSTAF"/>
	<property name="selenium-staf-jar.file" value="${selenium-staf-package.name}.jar"/>

	<property name="selenium-staf-package.dir" location="${build.dist.dir}/${selenium-staf-package.name}"/>
	<property name="selenium-staf-package-tgz.file" value="${selenium-staf-package.name}.tgz"/>
	<property name="selenium-staf-package.filepath" location="${build.dist.dir}/${selenium-staf-package-tgz.file}"/>

	<property name="zm-selenium-network-private-data.dir" location="data/private"/>
	<property name="zm-selenium-network-ajax-tests.dir" location="${src.java.dir}/com/zimbra/qa/selenium/projects/ajax/tests/network"/>
	<property name="zm-selenium-network-admin-tests.dir" location="${src.java.dir}/com/zimbra/qa/selenium/projects/admin/tests/network"/>
	<property name="zm-network-selenium.dir" location="../zm-network-selenium"/>
	<property name="zm-mailbox-store-conf.dir" location="../zm-mailbox/store-conf"/>
	<property name="zm-web-client.dir" location="../zm-web-client"/>
	<property name="zm-ajax.dir" location="../zm-ajax"/>
	<property name="zm-zimlets.dir" location="../zm-zimlets"/>

	<property name="resources-jar.file" value="resources.jar"/>
	<property name="coverage-jar.file" value="coverage.jar"/>

	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${build.deps.dir}/ant-contrib-1.0b1.jar"/>
		</classpath>
	</taskdef>

	<path id="src.java.dir">
		<pathelement location="${src.java.dir}"/>
	</path>

	<path id="build.dist.lib.classpath">
		<fileset dir="${build.dist.lib.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<target name="help" description="Selenium project target related helps">
		<echo message="selenium-jar: Creates the selenium jar file"/>
		<echo message="selenium-staf-package: Creates the selenium-staf package tgz file"/>
	</target>

	<target name="clean-zm-selenium-network-content" description="Deletes network related data and tests">
		<echo message="Deleting network related data and tests..."/>
		<delete dir="${zm-selenium-network-private-data.dir}"/>
		<delete dir="${zm-selenium-network-ajax-tests.dir}"/>
		<delete dir="${zm-selenium-network-admin-tests.dir}"/>
	</target>

	<target name="clean" depends="clean-zm-selenium-network-content" description="Cleans build directory">
		<echo message="Cleaning build directory..."/>
		<delete dir="${build.dir}"/>
	</target>

	<target name="setup" description="Creates required directories">
		<echo message="Create required directories..."/>
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.dist.dir}"/>
		<mkdir dir="${build.dist.lib.dir}"/>
		<mkdir dir="${build.classes.dir}"/>
	</target>

	<target name="download-ivy" description="Downloads IVY">
		<echo message="Downloading IVY..."/>
		<if>
			<not>
				<available file="${ivy.jar.file}" type="file"/>
			</not>
			<then>
				<mkdir dir="${ivy.jar.dir}"/>
				<get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true"/>
			</then>
		</if>
	</target>

	<target name="init-ivy" depends="download-ivy" description="Initializes IVY">
		<echo message="Initializing IVY..."/>
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar"/>
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
		<ivy:settings id="ivy.settings" file="conf/ivysettings.xml"/>
	</target>

	<target name="resolve" depends="init-ivy" description="Resolves dependencies">
		<echo message="Resolving dependencies..."/>
		<ivy:resolve settingsRef="ivy.settings"/>
		<ivy:cachepath pathid="class.path" settingsRef="ivy.settings"/>
	</target>

	<target name="zm-network-selenium-content" description="Copies network related data and tests">
		<echo message="Copying network related data and tests..."/>
		<if> <available file="${zm-network-selenium.dir}" type="dir"/>
			<then>
				<copy todir="src">
					<fileset dir="${zm-network-selenium.dir}/src"/>
				</copy>
				<copy todir="data">
					<fileset dir="${zm-network-selenium.dir}/data"/>
				</copy>
			</then>
		</if>
	</target>

	<target name="compile" depends="setup,zm-network-selenium-content,resources-jar,coverage-jar,resolve" description="Compiles the source code">
		<echo message="Compiling framework..."/>
		<javac destdir="${build.classes.dir}" debug="true" classpathref="class.path" nowarn="on" includeantruntime="false" encoding="iso-8859-1">
			<src refid="src.java.dir"/>
		</javac>
	</target>

	<target name="selenium-jar" depends="compile" description="Creates the selenium jar file">
		<echo message="Creating selenium jar file..."/>
		<jar destfile="${build.dist.lib.dir}/${selenium-jar.file}" basedir="${build.classes.dir}"/>
	</target>

	<target name="resources-classes" description="Copies the I18N properties files to build">
		<echo message="Copying the I18N properties files to build..."/>
		<copy todir="${build.resources.dir}">
			<fileset dir="${zm-web-client.dir}/WebRoot/messages/"/>
			<fileset dir="${zm-ajax.dir}/WebRoot/messages/"/>
		</copy>
		<copy todir="${build.resources.dir}">
			<fileset dir="${zm-mailbox-store-conf.dir}/conf/msgs/"/>
		</copy>
		<copy todir="${build.resources.dir}">
			<fileset dir="${zm-zimlets.dir}/src/zimlet/com_zimbra_attachcontacts/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zm-zimlets.dir}/src/zimlet/com_zimbra_attachmail/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zm-zimlets.dir}/src/zimlet/com_zimbra_date/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zm-zimlets.dir}/src/zimlet/com_zimbra_dnd/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zm-zimlets.dir}/src/zimlet/com_zimbra_email/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zm-zimlets.dir}/src/zimlet/com_zimbra_linkedin/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zm-zimlets.dir}/src/zimlet/com_zimbra_linkedinimage/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zm-zimlets.dir}/src/zimlet/com_zimbra_phone/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zm-zimlets.dir}/src/zimlet/com_zimbra_social/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zm-zimlets.dir}/src/zimlet/com_zimbra_srchhighlighter/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zm-zimlets.dir}/src/zimlet/com_zimbra_url/">
				<filename name="*.properties"/>
			</fileset>
			<fileset dir="${zm-zimlets.dir}/src/zimlet/com_zimbra_webex/">
				<filename name="*.properties"/>
			</fileset>
		</copy>
	</target>

	<target name="resources-jar" depends="resources-classes" description="Creates jar with all resource bundles">
		<echo message="Creating jar with all resource bundles..."/>
		<jar destfile="${build.dist.lib.dir}/${resources-jar.file}" basedir="${build.resources.dir}"/>
	</target>

	<target name="coverage-classes" description="Copies the coverage files to build">
		<echo message="Copying the coverage files to build..."/>
		<copy todir="${build.coverage.dir}">
			<fileset dir="${src.java.dir}/com/zimbra/qa/selenium/framework/util/coverage"/>
		</copy>
	</target>

	<target name="coverage-jar" depends="coverage-classes" description="Creates jar with all coverage files">
		<echo message="Creating jar with all coverage files..."/>
		<jar destfile="${build.dist.lib.dir}/${coverage-jar.file}" basedir="${build.coverage.dir}"/>
	</target>

	<target name="selenium-staf-jar" depends="selenium-jar, coverage-jar" description="Creates selenium-staf jar">
		<echo message="Creating selenium-staf jar..."/>
		<property name="build.staf.selenium" location="${build.dir}/staf/selenium"/>
		<property name="build.staf.selenium.jars.dir" location="${build.staf.selenium}/STAF-INF/jars"/>
		<property name="build.staf.selenium.classes.dir" location="${build.staf.selenium}/STAF-INF/classes"/>

		<copy todir="${build.staf.selenium.classes.dir}">
			<fileset dir="${build.classes.dir}"/>
		</copy>

		<ivy:install organisation="ant-contrib" module="ant-contrib" revision="1.0b3" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="ant-tar-patched" module="ant-tar-patched" revision="1.0" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="com.google.code.gson" module="gson" revision="2.8.0" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="com.google.guava" module="guava" revision="23.0" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="com.jcraft" module="jsch" revision="0.1.53" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="com.squareup.okhttp3" module="okhttp" revision="3.10.0" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="com.squareup.okio" module="okio" revision="1.13.0" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-beanutils" module="commons-beanutils" revision="1.7.0" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-cli" module="commons-cli" revision="1.2" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-codec" module="commons-codec" revision="1.7" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-collections" module="commons-collections" revision="3.2.2" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-configuration" module="commons-configuration" revision="1.10" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-httpclient" module="commons-httpclient" revision="3.1" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-io" module="commons-io" revision="2.5" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-lang" module="commons-lang" revision="2.6" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-logging" module="commons-logging" revision="1.0.3" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="dom4j" module="dom4j" revision="1.5.2" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="javax.mail" module="mail" revision="1.4.5" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="javax.servlet" module="javax.servlet-api" revision="3.1.0" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="jaxen" module="jaxen" revision="1.1-beta-6" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="libidn" module="libidn" revision="1.24" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="log4j" module="apache-log4j-extras" revision="1.0" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="log4j" module="log4j" revision="1.2.16" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="net.sf.ezmorph" module="ezmorph" revision="1.0.6" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="net.sf.json-lib" module="json-lib" revision="2.4" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="net.sf.staf" module="jstaf" revision="3.4.4" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="net.sourceforge.htmlcleaner" module="htmlcleaner" revision="2.2" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.apache.ant" module="ant" revision="1.10.1" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.apache.commons" module="commons-exec" revision="1.3" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.apache.httpcomponents" module="httpclient" revision="4.5.3" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.apache.httpcomponents" module="httpcore" revision="4.4.6" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.apache.ws.commons.util" module="ws-commons-util" revision="1.0.2" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.apache.xmlrpc" module="xmlrpc-client" revision="3.1.3" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.apache.xmlrpc" module="xmlrpc-common" revision="3.1.3" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.clapper" module="javautil" revision="3.2.0" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.json" module="json" revision="20160810" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.mariadb.jdbc" module="mariadb-java-client" revision="1.1.8" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.testng" module="testng" revision="5.12.1" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="xalan" module="serializer" revision="2.7.2" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="xml-apis" module="xml-apis" revision="2.0.2" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.seleniumhq.selenium" module="selenium-api" revision="${selenium.version}" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.seleniumhq.selenium" module="selenium-chrome-driver" revision="${selenium.version}" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.seleniumhq.selenium" module="selenium-edge-driver" revision="${selenium.version}" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.seleniumhq.selenium" module="selenium-firefox-driver" revision="${selenium.version}" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.seleniumhq.selenium" module="selenium-ie-driver" revision="${selenium.version}" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.seleniumhq.selenium" module="selenium-java" revision="${selenium.version}" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.seleniumhq.selenium" module="selenium-remote-driver" revision="${selenium.version}" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.seleniumhq.selenium" module="selenium-safari-driver" revision="${selenium.version}" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.seleniumhq.selenium" module="selenium-server" revision="${selenium.version}" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.seleniumhq.selenium" module="selenium-support" revision="${selenium.version}" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="zimbra" module="zm-common" revision="latest.integration" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="zimbra" module="zm-native" revision="latest.integration" settingsRef="ivy.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar"/>

		<copy todir="${build.staf.selenium.jars.dir}">
            <fileset dir="${build.tmp.dir}">
                <include name="*.jar"/>
            </fileset>

			<fileset dir="${build.dist.lib.dir}">
				<include name="${resources-jar.file}"/>
			</fileset>

			<fileset dir="${build.dist.lib.dir}">
				<include name="${coverage-jar.file}"/>
			</fileset>
		</copy>

		<fileset dir="${build.tmp.dir}" id="ivy.jar.files">
			<include name="**/*.jar"/>
		</fileset>

	    <pathconvert pathsep=" " property="ivyJarFiles" refid="ivy.jar.files">
			<map from="${build.tmp.dir}\" to=""/>
			<mapper>
				<chainedmapper>
					<flattenmapper/>
					<globmapper from="*.jar" to="*"/>
				</chainedmapper>
			</mapper>
	    </pathconvert>

		<jar destfile="${build.dist.lib.dir}/${selenium-staf-jar.file}" basedir="${build.staf.selenium}">
			<manifest>
				<attribute name="Main-Class" value="staf.Driver"/>
				<section name="staf/service/info">
					<attribute name="Service-Class" value="com.zimbra.qa.selenium.staf.StafIntegration"/>
					<attribute name="Packaged-Jars" value="${ivyJarFiles} resources coverage"/>
				</section>
			</manifest>
		</jar>
        <delete dir="${build.tmp.dir}"/>
	</target>

	<target name="selenium-staf-package" depends="selenium-staf-jar" description="Creates the selenium-staf package tgz file">
		<echo message="Creating selenium-staf package tgz contents..."/>
		<copy file="${build.dist.lib.dir}/${selenium-jar.file}" todir="${selenium-staf-package.dir}/jars"/>
		<copy file="${build.dist.lib.dir}/${selenium-staf-jar.file}" todir="${selenium-staf-package.dir}/jars"/>
		<copy todir="${selenium-staf-package.dir}/conf">
			<fileset dir="conf">
				<include name="**/*"/>
			</fileset>
		</copy>
		<copy todir="${selenium-staf-package.dir}/data">
			<fileset dir="data">
				<include name="**/*"/>
			</fileset>
		</copy>

		<echo message="Creating selenium-staf package tgz file..."/>
		<tar destfile="${selenium-staf-package.filepath}" compression="gzip">
			<tarfileset dir="${selenium-staf-package.dir}" prefix="${selenium-staf-package.name}" mode="777">
				<include name="**/*"/>
			</tarfileset>
		</tar>
		<checksum file="${selenium-staf-package.filepath}" forceOverwrite="yes"/>
	</target>

	<target name="Count-ExecuteHarnessMain" depends="selenium-jar" description="Count number of tests for selected groups and tests pattern">
		<echo message="Counting number of tests for selected groups and tests pattern..."/>
		<property name="jarfile" value="${build.dist.lib.dir}/${selenium-jar.file}"/>
		<property name="pattern" value="ajax.tests"/>
		<property name="groups" value="always,sanity"/>
		<property name="excludeGroups" value="performance,skip"/>
		<java classname="com.zimbra.qa.selenium.framework.core.ExecuteHarnessMain" classpathref="class.path" fork="true" failonerror="true">
			<classpath refid="build.dist.lib.classpath"/>
			<arg line="-s -j ${jarfile} -p ${pattern} -g ${groups} -eg ${excludeGroups} -l conf/log4j.properties"/>
		</java>
	</target>

	<target name="Run-ExecuteHarnessMain" depends="selenium-jar" description="Execute tests for selected groups and tests pattern">
		<echo message="Executing tests for selected groups and tests pattern..."/>
		<property name="jarfile" value="${build.dist.lib.dir}/${selenium-jar.file}"/>
		<property name="pattern" value="ajax.tests"/>
		<property name="groups" value="always,sanity"/>
		<property name="excludeGroups" value="performance,skip"/>
		<java classname="com.zimbra.qa.selenium.framework.core.ExecuteHarnessMain" classpathref="class.path" fork="true" failonerror="true">
			<classpath refid="build.dist.lib.classpath"/>
			<arg line="-j ${jarfile} -p ${pattern} -g ${groups} -eg ${excludeGroups} -l conf/log4j.properties"/>
		</java>
	</target>
</project>