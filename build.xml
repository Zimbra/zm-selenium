<?xml version="1.0" encoding="UTF-8"?>
<project name="testng" default="jar" basedir=".">

	<property name="build.version" value="6.0.0" />
	<property name="dist.version.dir" value="zimbra-${build.version}" />
	<property name="build.dir" location="build" />
	<property name="build.classes.dir" location="${build.dir}/classes" />
	<property name="deployDir" location="${build.dir}/dist" />
	<!-- pass in by Anthill -->
	<property name="dist.dir.root" location="${deployDir}" />
	<property name="dist.dir" location="${dist.dir.root}/${dist.version.dir}" />
	<property name="dist.lib.dir" location="${dist.dir}/lib" />
	<property name="conf.dir" location="conf" />
	<property name="generated.dir" location="${build.dir}/generated" />
	<property name="generated.java.dir" location="${generated.dir}/src/java" />
	<property name="generated.javadocs.dir" location="${generated.dir}/javadocs" />
	<property name="src.dir" location="src" />
	<property name="src.java.dir" location="${src.dir}/java" />
	<property name="test.log.dir" location="/tmp" />
	<property name="webclient.dir" location="../ZimbraWebClient" />
	<property name="server.dir" location="../ZimbraServer" />
	<property name="common.dir" location="../ZimbraCommon" />
	<property name="common.classes.dir" location="${common.dir}/build/classes" />


	<!-- property file="${basedir}/conf/config.properties" /-->
	<!-- COMPILE TESTS-->
	<path id="class.path">
		<pathelement location="${build.classes.dir}" />

		<fileset dir="jars">
			<include name="**/*.jar" />
		</fileset>

		<pathelement location="${common.classes.dir}" />

		<fileset dir="../ZimbraCommon/jars">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="../ZimbraCommon/build">
			<include name="zimbracommon.jar" />
		</fileset>

		<fileset dir="../ZimbraServer/build">
			<include name="zimbrastore.jar" />
		</fileset>
	</path>

	<path id="all.java.path">
		<pathelement location="${src.java.dir}" />
		<pathelement location="${generated.java.dir}" />
	</path>

	<target name="clean" description="Removes class files">
		<delete dir="${build.dir}" />
	</target>

	<target name="build-init">
		<mkdir dir="${test.log.dir}" />
		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${dist.dir.root}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${dist.lib.dir}" />
		<mkdir dir="${generated.java.dir}" />
	</target>
	<target name="compile" depends="build-init" description="Compiles the source code">
		<echo message="compiling framework..." />
		<ant dir="${common.dir}" target="jar" inheritAll="false" />
		<ant dir="${server.dir}" target="jar" inheritAll="false" />
		<javac destdir="${build.classes.dir}" debug="true" classpathref="class.path">
			<src refid="all.java.path" />
		</javac>
	</target>
	<target name="jar" depends="copy-data,compile" description="Creates the jar file">
		<jar destfile="${dist.lib.dir}/zimbraselenium.jar" basedir="${build.classes.dir}" />
	</target>

	<target name="javadocs">
		<javadoc destdir="${generated.javadocs.dir}" classpathref="class.path" access="public">
			<link offline="true" href="http://java.sun.com/j2se/1.5.0/docs/api package-list" packagelistLoc="." />
			<fileset dir="${src.java.dir}/projects/html/tests">
				<include name="**/*.java" />
				<exclude name="CommonTest.java" />
			</fileset>
			<fileset dir="${src.java.dir}/projects/zcs/tests">
				<include name="**/*.java" />
				<exclude name="CommonTest.java" />
			</fileset>
		</javadoc>
	</target>

	<target name="jar-staf-selenium" depends="compile" description="Creates the selenium service jar file">
		<property name="build.staf.selenium.classes.dir" location="${build.dir}/staf/selenium/STAF-INF/classes" />
		<property name="build.staf.selenium.jars.dir" location="${build.dir}/staf/selenium/STAF-INF/jars" />
		<copy todir="${build.staf.selenium.classes.dir}">
			<fileset dir="${build.classes.dir}" />
		</copy>
		<copy todir="${build.staf.selenium.jars.dir}">
			<fileset dir="jars">
				<include name="**/*.jar" />
			</fileset>
		</copy>
		<copy todir="${build.staf.selenium.jars.dir}">
			<fileset dir="../ZimbraCommon/jars">
				<include name="**/*.jar" />
			</fileset>
		</copy>
		<copy todir="${build.staf.selenium.jars.dir}">
			<fileset dir="../ZimbraServer/build">
				<include name="zimbrastore.jar" />
			</fileset>
		</copy>
		<copy todir="${build.staf.selenium.jars.dir}">
			<fileset dir="../ZimbraCommon/build">
				<include name="zimbracommon.jar" />
			</fileset>
		</copy>
		<jar destfile="${dist.lib.dir}/zstafselenium.jar" basedir="${build.dir}/staf/selenium">
			<manifest>
				<attribute name="Main-Class" value="projects.zcs.bin.ExecuteTests" />
				<section name="staf/service/info">
					<attribute name="Service-Class" value="staf.StafIntegration" />
					<attribute name="Packaged-Jars" value="commons-configuration-1.5 commons-lang-2.4 ocutil-2.4.2 selenium-java-client-driver-1.0-SNAPSHOT
						selenium-server-1.0-SNAPSHOT-standalone testng-5.8-jdk15 xalan activation commons-cli-1.2 commons-codec-1.4 commons-collections-3.2.1 commons-digester-2.0 commons-httpclient-3.0 commons-logging dom4j-1.5.2 log4j-1.2.15 mail libidn-1.15 zimbracommon zimbrastore" />
				</section>
			</manifest>
		</jar>
	</target>

	<target name="jar-staf" depends="jar-staf-selenium" description="Creates the STAF jar file">
	</target>

	<target name="generate.locale.files.ZimbraWebClient" description="Grab I18N message files from ZimbraWebClient project">
			<copy todir="${src.java.dir}/framework/locale">
				<fileset dir="${webclient.dir}/WebRoot/messages/" />
			</copy>
	</target>
	
	<target name="generate.local.files.ZimbraServer" description="Grab I18N message files from ZimbraServer project">
		<copy todir="${src.java.dir}/framework/locale">
			<fileset dir="${server.dir}/conf/msgs/" />
		</copy>
	</target>

	<target name="generate.locale.files" depends="generate.locale.files.ZimbraWebClient, generate.local.files.ZimbraServer" description="Grab I18N message files" />

	<target name="copy-data" depends="generate.locale.files" description="copies i18n and test data">
		<mkdir dir="${src.java.dir}/projects/zcs/data"/>
		<copy todir="${build.classes.dir}/projects/zcs/data">
			<fileset dir="${src.java.dir}/projects/zcs/data" />
		</copy>
		<copy todir="${build.classes.dir}/framework/locale">
			<fileset dir="${src.java.dir}/framework/locale" />
		</copy>
	</target>

	<target name="Run html tests" depends="jar">
		<echo message="running  html tests..." />
		<java classname="projects.html.bin.ExecuteTests" classpathref="class.path" fork="true">
			<arg value="debugSuite" />
			<jvmarg value="-ea" />
			<jvmarg value="-Dfile.encoding=UTF-8"/>
			<jvmarg value="-Dlog4j.configuration=file:conf/log4j.properties"/>
		</java>
	</target>
	<target name="Run ajax tests" depends="jar">
		<echo message="running ajax tests..." />
		<java classname="projects.zcs.bin.ExecuteTests" classpathref="class.path" fork="true">
			<arg value="fullSuite" />
			<jvmarg value="-ea" />
			<jvmarg value="-Dfile.encoding=UTF-8" />
		</java>
	</target>
	<target name="Run tests" depends="Run html tests, Run ajax tests">
	</target>


	<target name="Run-ExecuteHarnessMain" depends="jar">
		<property name="jarfile" value="${dist.lib.dir}/zimbraselenium.jar"/>
		<property name="pattern" value="projects.zcs.tests"/>
		<property name="groups" value="always,sanity"/>
		<echo>Executing ...</echo>
		<java classname="framework.core.ExecuteHarnessMain"          classpathref="class.path"          fork="true" failonerror="true">
			<arg line="-j ${jarfile} -p ${pattern} -g ${groups} -l conf/log4j.properties"/>
 		</java>
	</target>
		
	<target name="Run-TMS" depends="jar">
		<echo>Just a stub for now ...</echo>
	</target>

	<!-- TARGETS FOR REMOTE MACHINES -->
	
	<target name="seleniumjar" depends="clean,copy-data,build-init" description="Creates the jar file">
		<echo message="compiling framework..." />
		<javac destdir="${build.classes.dir}" debug="true" classpathref="class.path">
			<src refid="all.java.path" />
		</javac>
		<jar destfile="${dist.lib.dir}/zimbraselenium.jar" basedir="${build.classes.dir}" />
	</target>
	
	<target name="build-selng" depends="seleniumjar">
		<echo message="coping jars..." />
		<copy todir="../ZimbraSelenium/jars">
			<fileset dir="../ZimbraServer/build">
				<include name="zimbrastore.jar"/>
			</fileset>
		</copy>			
		<copy todir="../ZimbraSelenium/jars">
			<fileset dir="../ZimbraCommon/build">
				<include name="zimbracommon.jar"/>
			</fileset>
			<fileset dir="../ZimbraCommon/jars">
				<include name="**/*.jar"/>
				<exclude name = "**/jetty-6.1.22.z6.jar"/>	
				<exclude name = "**/jetty-util-6.1.22.z6.jar"/>
			</fileset>
		</copy>
		<tar destfile="${build.dir}/selng.tgz" compression="gzip">
			<tarfileset dir="../ZimbraSelenium" prefix="SelNG" mode="777">
				<include name="**/*"/>
				<exclude name = "build/**"/>	
				<exclude name = "bin/**"/>
				<exclude name = "test-output/**"/>
				<exclude name = "docs/**"/>
				<exclude name = "zmBrowserPerf/**"/>	
			</tarfileset>	  
		</tar>		
			<copy file="${build.dir}/selng.tgz" todir="${dist.dir.root}"/>
			<checksum file="${dist.dir.root}/selng.tgz" forceOverwrite="yes"/>		  
	</target>	
	
	<target name="compile-zcs" description="compiles classes on remote machines">
		<delete dir="build/classes" />
		<mkdir dir="${test.log.dir}" />
		<mkdir dir="build/classes" />
		<echo message="copies i18n and test data" />
		<copy todir="build/classes/projects/zcs/data">
			<fileset dir="src/java/projects/zcs/data" />
		</copy>
		<copy todir="build/classes/framework/locale">
			<fileset dir="src/java/framework/locale" />
		</copy>
		<echo message="compiling framework..." />
		<javac debug="true" source="1.5" classpathref="cpath" srcdir="." destdir="build/classes" />
	</target>
	
	<path id="cpath">
		<pathelement location="build/classes}" />
		<fileset dir="jars">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<!-- RUN TESTS ON REMOTE MACHINES-->
	
	<taskdef name="testng" classname="com.beust.testng.TestNGAntTask" classpathref="cpath" />

	<path id="runpath">
		<path refid="cpath" />
		<pathelement location="build/classes" />
		<pathelement location="src/java/projects/zcs/data/zmMsg.properties" />
	</path>

	<target name="run-html-zcs">
		<echo message="running  html tests..." />
		<java classname="projects.html.bin.ExecuteTests" classpathref="runpath" fork="true">
			<arg value="fullSuite" />
			<jvmarg value="-ea" />
			<jvmarg value="-Dfile.encoding=UTF-8" />
		</java>
	</target>
	
	<target name="run-ajax-zcs">
		<echo message="running ajax tests..." />
		<java classname="projects.zcs.bin.ExecuteTests" classpathref="runpath" fork="true">
			<arg value="fullSuite" />
			<jvmarg value="-ea" />
			<jvmarg value="-Dfile.encoding=UTF-8" />
		</java>
	</target>
	
	<target name="test-html-zcs" depends="compile-zcs, run-html-zcs"/>
	<target name="test-ajax-zcs" depends="compile-zcs, run-ajax-zcs"/>
	<target name="test-zcs" depends="compile-zcs, run-html-zcs, run-ajax-zcs"/>
	
</project>
